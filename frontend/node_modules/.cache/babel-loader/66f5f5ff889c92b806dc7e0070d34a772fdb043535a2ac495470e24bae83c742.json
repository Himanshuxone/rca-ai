{"ast":null,"code":"var _jsxFileName = \"/home/himanshu/workspace/AI/rca-ai/frontend/src/components/DarkModeToggle.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DarkModeToggle() {\n  _s();\n  const [darkMode, setDarkMode] = useState(false);\n  useEffect(() => {\n    const storedTheme = localStorage.getItem(\"theme\");\n    if (storedTheme === \"dark\") {\n      document.body.classList.add(\"dark\");\n      setDarkMode(true);\n    }\n  }, []);\n  const toggleTheme = () => {\n    const newMode = !darkMode;\n    setDarkMode(newMode);\n    document.body.classList.toggle(\"dark\", newMode);\n    localStorage.setItem(\"theme\", newMode ? \"dark\" : \"light\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: toggleTheme,\n    className: \"dark-toggle\",\n    children: darkMode ? \"üåô Dark Mode\" : \"‚òÄÔ∏è Light Mode\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(DarkModeToggle, \"n2P3coCVngntCnyS/Nqj+dgR7+U=\");\n_c = DarkModeToggle;\nconst styles = {\n  button: {\n    padding: \"0.5rem 1rem\",\n    backgroundColor: \"#2563eb\",\n    color: \"#fff\",\n    border: \"none\",\n    borderRadius: \"0.5rem\",\n    cursor: \"pointer\",\n    fontWeight: 600,\n    marginBottom: \"1rem\"\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"DarkModeToggle\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","DarkModeToggle","_s","darkMode","setDarkMode","storedTheme","localStorage","getItem","document","body","classList","add","toggleTheme","newMode","toggle","setItem","onClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","styles","button","padding","backgroundColor","color","border","borderRadius","cursor","fontWeight","marginBottom","$RefreshReg$"],"sources":["/home/himanshu/workspace/AI/rca-ai/frontend/src/components/DarkModeToggle.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nexport default function DarkModeToggle() {\n  const [darkMode, setDarkMode] = useState(false);\n\n  useEffect(() => {\n    const storedTheme = localStorage.getItem(\"theme\");\n    if (storedTheme === \"dark\") {\n      document.body.classList.add(\"dark\");\n      setDarkMode(true);\n    }\n  }, []);\n\n  const toggleTheme = () => {\n    const newMode = !darkMode;\n    setDarkMode(newMode);\n    document.body.classList.toggle(\"dark\", newMode);\n    localStorage.setItem(\"theme\", newMode ? \"dark\" : \"light\");\n  };\n\n  return (\n    <button onClick={toggleTheme} className=\"dark-toggle\">\n      {darkMode ? \"üåô Dark Mode\" : \"‚òÄÔ∏è Light Mode\"}\n    </button>\n  );\n}\n\nconst styles = {\n  button: {\n    padding: \"0.5rem 1rem\",\n    backgroundColor: \"#2563eb\",\n    color: \"#fff\",\n    border: \"none\",\n    borderRadius: \"0.5rem\",\n    cursor: \"pointer\",\n    fontWeight: 600,\n    marginBottom: \"1rem\",\n  },\n};\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,eAAe,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACvC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAE/CD,SAAS,CAAC,MAAM;IACd,MAAMQ,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IACjD,IAAIF,WAAW,KAAK,MAAM,EAAE;MAC1BG,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC;MACnCP,WAAW,CAAC,IAAI,CAAC;IACnB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMQ,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMC,OAAO,GAAG,CAACV,QAAQ;IACzBC,WAAW,CAACS,OAAO,CAAC;IACpBL,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACI,MAAM,CAAC,MAAM,EAAED,OAAO,CAAC;IAC/CP,YAAY,CAACS,OAAO,CAAC,OAAO,EAAEF,OAAO,GAAG,MAAM,GAAG,OAAO,CAAC;EAC3D,CAAC;EAED,oBACEb,OAAA;IAAQgB,OAAO,EAAEJ,WAAY;IAACK,SAAS,EAAC,aAAa;IAAAC,QAAA,EAClDf,QAAQ,GAAG,cAAc,GAAG;EAAe;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtC,CAAC;AAEb;AAACpB,EAAA,CAvBuBD,cAAc;AAAAsB,EAAA,GAAdtB,cAAc;AAyBtC,MAAMuB,MAAM,GAAG;EACbC,MAAM,EAAE;IACNC,OAAO,EAAE,aAAa;IACtBC,eAAe,EAAE,SAAS;IAC1BC,KAAK,EAAE,MAAM;IACbC,MAAM,EAAE,MAAM;IACdC,YAAY,EAAE,QAAQ;IACtBC,MAAM,EAAE,SAAS;IACjBC,UAAU,EAAE,GAAG;IACfC,YAAY,EAAE;EAChB;AACF,CAAC;AAAC,IAAAV,EAAA;AAAAW,YAAA,CAAAX,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}